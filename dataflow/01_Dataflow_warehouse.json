{
	"name": "01_Dataflow_warehouse",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "appserver40005_app_db_SalesOrderHeader",
						"type": "DatasetReference"
					},
					"name": "SalesOrderHeaderStream"
				},
				{
					"dataset": {
						"referenceName": "appserver40005_appdb_SalesOrderDetail",
						"type": "DatasetReference"
					},
					"name": "SalesOrderDetails"
				},
				{
					"dataset": {
						"referenceName": "appserver40005_appdb_Customer",
						"type": "DatasetReference"
					},
					"name": "CustomerStream"
				},
				{
					"dataset": {
						"referenceName": "appserver40005_appdb_Product",
						"type": "DatasetReference"
					},
					"name": "ProductStream"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "ProductCategoryStream"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dataworkspace4505_appdb_factsales",
						"type": "DatasetReference"
					},
					"name": "FactSalesStream"
				},
				{
					"dataset": {
						"referenceName": "dataworkspace4505_datapool_dimcustomer",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "dataworkspace4505_datapool_dimproduct",
						"type": "DatasetReference"
					},
					"name": "DimensionProductStream"
				}
			],
			"transformations": [
				{
					"name": "SalesOrderHeaderJoinSalesOrderDetail"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "SelectCustomerColumns"
				},
				{
					"name": "ProductStreamJoinProductCategorystream"
				},
				{
					"name": "SelectDimensionProductColumns"
				},
				{
					"name": "FilterNULLColorrows"
				},
				{
					"name": "DerivedTotalDueStream"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesOrderID as integer,",
				"          RevisionNumber as integer,",
				"          OrderDate as timestamp,",
				"          DueDate as timestamp,",
				"          ShipDate as timestamp,",
				"          Status as integer,",
				"          OnlineOrderFlag as boolean,",
				"          SalesOrderNumber as string,",
				"          PurchaseOrderNumber as string,",
				"          AccountNumber as string,",
				"          CustomerID as integer,",
				"          ShipToAddressID as integer,",
				"          BillToAddressID as integer,",
				"          ShipMethod as string,",
				"          CreditCardApprovalCode as string,",
				"          SubTotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          Comment as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderHeaderStream",
				"source(output(",
				"          SalesOrderID as integer,",
				"          SalesOrderDetailID as integer,",
				"          OrderQty as integer,",
				"          ProductID as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(38,6),",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesOrderDetails",
				"source(output(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerStream",
				"source(output(",
				"          ProductID as integer,",
				"          Name as string,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          StandardCost as decimal(19,4),",
				"          ListPrice as decimal(19,4),",
				"          Size as string,",
				"          Weight as decimal(8,2),",
				"          ProductCategoryID as integer,",
				"          ProductModelID as integer,",
				"          SellStartDate as timestamp,",
				"          SellEndDate as timestamp,",
				"          DiscontinuedDate as timestamp,",
				"          ThumbNailPhoto as binary,",
				"          ThumbnailPhotoFileName as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductStream",
				"source(output(",
				"          ProductCategoryID as integer,",
				"          ParentProductCategoryID as integer,",
				"          Name as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> ProductCategoryStream",
				"SalesOrderHeaderStream, SalesOrderDetails join(SalesOrderHeaderStream@SalesOrderID == SalesOrderDetails@SalesOrderID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> SalesOrderHeaderJoinSalesOrderDetail",
				"SalesOrderHeaderJoinSalesOrderDetail select(mapColumn(",
				"          SalesOrderID = SalesOrderHeaderStream@SalesOrderID,",
				"          OrderDate,",
				"          CustomerID,",
				"          SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          SalesOrderID = SalesOrderDetails@SalesOrderID,",
				"          OrderQty,",
				"          ProductID,",
				"          UnitPrice,",
				"          UnitPriceDiscount,",
				"          LineTotal",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"CustomerStream select(mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectCustomerColumns",
				"ProductStream, ProductCategoryStream join(ProductStream@ProductCategoryID == ProductCategoryStream@ProductCategoryID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> ProductStreamJoinProductCategorystream",
				"ProductStreamJoinProductCategorystream select(mapColumn(",
				"          ProductID,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryID = ProductStream@ProductCategoryID,",
				"          ProductCategoryName = ProductCategoryStream@Name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectDimensionProductColumns",
				"SelectDimensionProductColumns filter(!isNull(Color)) ~> FilterNULLColorrows",
				"SelectColumns derive(TotalDue = add(Freight,add(SubTotal, TaxAmt))) ~> DerivedTotalDueStream",
				"DerivedTotalDueStream sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesOrderId as integer,",
				"          OrderDate as timestamp,",
				"          CustomerId as integer,",
				"          Subtotal as decimal(19,4),",
				"          TaxAmt as decimal(19,4),",
				"          Freight as decimal(19,4),",
				"          TotalDue as decimal(19,4),",
				"          OrderQty as integer,",
				"          ProductId as integer,",
				"          UnitPrice as decimal(19,4),",
				"          UnitPriceDiscount as decimal(19,4),",
				"          LineTotal as decimal(18,0)",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SalesOrderId = SalesOrderID,",
				"          OrderDate,",
				"          CustomerId = CustomerID,",
				"          Subtotal = SubTotal,",
				"          TaxAmt,",
				"          Freight,",
				"          TotalDue,",
				"          OrderQty,",
				"          ProductId = ProductID,",
				"          UnitPrice,",
				"          UnitPriceDiscount,",
				"          LineTotal",
				"     )) ~> FactSalesStream",
				"SelectCustomerColumns sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          CompanyName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          CompanyName",
				"     )) ~> sink1",
				"FilterNULLColorrows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ProductId as integer,",
				"          ProductNumber as string,",
				"          Color as string,",
				"          ProductCategoryId as integer,",
				"          ProductCategoryName as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ProductId = ProductID,",
				"          ProductNumber,",
				"          Color,",
				"          ProductCategoryId = ProductCategoryID,",
				"          ProductCategoryName",
				"     )) ~> DimensionProductStream"
			]
		}
	}
}